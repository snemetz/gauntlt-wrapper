{"name":"Gauntlt-wrapper","tagline":"Automate gauntlt for easy CI use","body":"gauntlt_wrapper\r\n===========\r\nMaking running gauntlt in a CI workflow easier\r\n\r\nThe goal of this is to make it easy to run gauntlt 100% automated. Which means install scripts for all tools used, working templates that can be used without modifications.\r\n\r\n## Table of Contents\r\n\r\n* [Usage](#usage)\r\n* [Documentation](#documentation)\r\n  * [Targets File](#targets-file)\r\n  * [Template Files](#template-files)\r\n\r\n## Usage\r\n\r\n* Copy the contents of this repository to a directory\r\n* `install-tools.sh` is a work in progress for installing all the tools in virtual environments on CentOS\r\n* `init.env.sh` is for getting environment setup in a new shell after everything haas been installed\r\n* `run.sh` is for generating the attack files and running gauntlt\r\n\r\n* Create `gauntlt_gen.targets` using `gauntlt_gen.targets.example` as an example.\r\n* Create/modify templates in `templates/` Keep the filenames simple, as they are referenced by the `gauntlt_gen.targets` file.\r\n\r\n* Your attack files will be created in `attacks/` as `_gen_*.attack`\r\n* Previously generated attack files will be deleted upon generation.\r\n\r\nPlease note that the templates included here are works in progress. Some are complete and some may need to be modified. Feel free to sumbit pull requests to add more templates.\r\n\r\n## Documentation\r\n\r\n### Targets File\r\n\r\n`gauntlt_gen.targets` file describes what should be run and what data is passed to the templates. It has 2 sections: `:data` and `attacks`\r\n\r\n`:data` is where all data to be passed to the templates is defined. Any data item defined here will be passed to the template. But the templates defines what data items it uses\r\n\r\n`:attacks` is a list of the attacks to run. The names match the file names of the templates\r\n\r\n### Template Files\r\n\r\nTemplate files reside under the `templates/` directory. Each one defines a specific attack and the results it should test for. These are Ruby ERB templates, so they will contain some Ruby code.\r\n\r\nUsing `nmap_os_apache.erb' as an example:\r\n```\r\n@announce-cmd\r\n@slow\r\n\r\nFeature: Service detection. Make sure Apache is running <%= config[:host] %> and does not display the version\r\n\r\n  Background:\r\n    Given \"nmap\" is installed\r\n    And the following profile:\r\n      | name     | value            |\r\n      <% config.each do |name, value| -%>\r\n      | <%= name %> | <%= value %> |\r\n      <% end -%>\r\n\r\n  Scenario: Detect OS\r\n    When I launch an \"nmap\" attack with:\r\n      \"\"\"\r\n      nmap -sV -p T:<port_open> -PN <hostname>\r\n      \"\"\"\r\n    # Verify Apache server with no version info\r\n    Then the output should contain:\r\n      \"\"\"\r\n      Apache\r\n      \"\"\"\r\n    But the output should not match:\r\n      \"\"\"\r\n      Apache httpd [0-9.]+\r\n      \"\"\"\r\n```\r\nThis start with 2 options: `@announce-cmd` to display the command line used and `@slow` to increase the timeout.\r\n\r\n**Feature** describes what this test is about. The `<%= config[:host] %>` in the description will be replaced by the `:host` data item from the targets file\r\n\r\n**Background** describes the environment required for all the following tests.\r\nThe example's background contain 2 items. First a step to verify that the nmap is installed. The second item is a data table and some Ruby code to bring in all the data items from the targets file. This table definition should be in all templates.\r\n\r\n**Scenario** describes the steps for the attack and testing the results. This launches an nmap attack with the command line `nmap -sV -p T:<port_open> -PN <hostname>`. `port_open` and `hostname` are pulled from the data table which was pulled from the targets file. Then it tests the output to ensure that it contained `Apache`, but did not have a version number after it\r\n\r\nThanks\r\n======\r\n- Patrick Morgan for gauntlt_gen. Which helped getting this started. My version is part of this repo and is not compatible with the original.\r\n- Everyone working on gauntlt\r\n\r\nThe MIT License\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}